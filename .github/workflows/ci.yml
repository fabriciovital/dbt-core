name: CI

on:
  push:
    branches: ['main']

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest python-dotenv selenium psycopg2-binary

      - name: Add network sparkanos
        run: docker network create sparkanos       

      - name: Enter application directory
        working-directory: applications/postgres_adventureworks
        run: |
          docker compose up -d
          sleep 30  # Aguarda o PostgreSQL iniciar completamente

      - name: Get PostgreSQL container IP
        id: get_postgres_ip
        run: |
          POSTGRES_IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' postgres_adventureworks)
          echo "Postgres IP: $POSTGRES_IP"
          echo "::set-output name=POSTGRES_IP::$POSTGRES_IP"
        
      - name: Run tests
        env:
          HOST: ${{ steps.get_postgres_ip.outputs.POSTGRES_IP }}  # Usar o IP obtido do container
          PORT_POSTGRES: 5432
          USER_POSTGRES: postgres
          PASSWORD_POSTGRES: postgres
          DATABASE: Adventureworks
        run: pytest tests/test_postgres_connection.py
